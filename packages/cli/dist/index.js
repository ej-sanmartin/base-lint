#!/usr/bin/env node
import{Command as At}from"commander";import T from"path";import{globby as ot}from"globby";import{minimatch as at}from"minimatch";import ct from"ignore";import{promises as je}from"fs";import ie from"path";import{parse as Te}from"@typescript-eslint/typescript-estree";var Ae=Te;function C(e,t){try{return Ae(e,{loc:!0,range:!0,jsx:t.endsWith("x"),comment:!1,errorOnUnknownASTType:!1,useJSXTextNode:!0,warnOnUnsupportedTypeScriptVersion:!1,loggerFn:()=>{}})}catch{return null}}function A(e,t,r=null){t(e,r);for(let n of Object.keys(e)){let i=e[n];if(i)if(Array.isArray(i))for(let s of i)s&&typeof s=="object"&&"type"in s&&A(s,t,e);else typeof i=="object"&&"type"in i&&A(i,t,e)}}import Re from"postcss";function P(e,t){try{return Re.parse(e,{from:t})}catch{return null}}function V(e,t){e.walk(r=>{(r.type==="rule"||r.type==="atrule")&&t(r)})}import{parse as ke,HTMLElement as Ie}from"node-html-parser";function X(e){let t=ke(e,{script:!0,style:!0,comment:!1}),r=[],n=t.querySelectorAll("script, style");for(let i of n)if(i instanceof Ie){if(i.tagName==="SCRIPT"){if(i.getAttribute("src"))continue;let o=i.innerHTML;r.push({type:"script",content:o,line:K(e,Y(i))})}else if(i.tagName==="STYLE"){let s=i.innerHTML;r.push({type:"style",content:s,line:K(e,Y(i))})}}return r}function K(e,t){return t<=0?1:e.slice(0,t).split(/\r?\n/).length}function Y(e){if(Array.isArray(e.range)&&e.range.length>0)return e.range[0];let t=e.toString(),r=e.root;return r?r.toString().indexOf(t):0}function O(e,t){let r=[];return A(e,(n,i)=>{if(n.type==="MemberExpression"){let s=$e(n,t);s&&r.push(s)}else if(n.type==="NewExpression"){let s=Fe(n);s&&r.push(s)}else if(n.type==="Identifier"){let s=Ce(n,i);s&&r.push(s)}}),r}function D(e){let t=[];return V(e,r=>{if(r.type==="rule"){let n=r.selector??"";n.includes(":has(")&&t.push(_("has",":has() selector",r)),n.includes(":where(")&&t.push(_("where",":where() selector",r))}r.type==="atrule"&&r.name==="container"&&t.push(_("container-queries","@container queries",r))}),t}function $e(e,t){if(!t.strict&&e.computed)return null;let r=v(e.object),n=e.property&&e.property.type==="Identifier"?e.property.name:null;return!r||!n?null:{"navigator.share":{featureId:"share",featureName:"Web Share API",line:e.property.loc?.start.line??e.loc?.start.line??null,column:(e.property.loc?.start.column??e.loc?.start.column??0)+1},"navigator.usb":{featureId:"webusb",featureName:"WebUSB API",line:e.property.loc?.start.line??e.loc?.start.line??null,column:(e.property.loc?.start.column??e.loc?.start.column??0)+1},"Notification.requestPermission":{featureId:"notifications",featureName:"Notifications API",line:e.property.loc?.start.line??e.loc?.start.line??null,column:(e.property.loc?.start.column??e.loc?.start.column??0)+1}}[`${r}.${n}`]??null}function Fe(e){if(e.callee.type==="Identifier"){let t=e.callee.name;if(t==="Notification")return{featureId:"notifications",featureName:"Notifications API",line:e.callee.loc?.start.line??e.loc?.start.line??null,column:(e.callee.loc?.start.column??e.loc?.start.column??0)+1};if(t==="BroadcastChannel")return{featureId:"broadcast-channel",featureName:"BroadcastChannel API",line:e.callee.loc?.start.line??e.loc?.start.line??null,column:(e.callee.loc?.start.column??e.loc?.start.column??0)+1};if(t==="IdleDetector")return{featureId:"idle-detection",featureName:"Idle Detection API",line:e.callee.loc?.start.line??e.loc?.start.line??null,column:(e.callee.loc?.start.column??e.loc?.start.column??0)+1}}return null}function Ce(e,t){return e.name==="IdleDetector"?t&&t.type==="NewExpression"&&t.callee===e?null:{featureId:"idle-detection",featureName:"Idle Detection API",line:e.loc?.start.line??null,column:(e.loc?.start.column??0)+1}:null}function _(e,t,r){let n=r.source?.start;return{featureId:e,featureName:t,line:n?.line??null,column:n?n.column+1:null}}function v(e){if(e.type==="Identifier")return e.name;if(e.type==="TSAsExpression"||e.type==="TSTypeAssertion"||e.type==="TSNonNullExpression"||e.type==="ChainExpression")return v(e.expression);if(e.type==="MemberExpression"&&e.property.type==="Identifier"&&!e.computed){let t=v(e.object);if(t)return`${t}.${e.property.name}`}return null}import{readFileSync as Pe}from"fs";import{createRequire as _e}from"module";import B from"path";import{pathToFileURL as Q}from"url";var Oe=typeof import.meta<"u"&&import.meta.url?import.meta.url:typeof __filename<"u"?Q(__filename).href:Q(B.join(process.cwd(),"index.js")).href,Z=_e(Oe),De=Z("web-features/data.json"),L="unknown";try{let e=Z.resolve("web-features"),t=B.join(B.dirname(e),"package.json"),r=Pe(t,"utf-8"),n=JSON.parse(r);typeof n.version=="string"&&(L=n.version)}catch{L="unknown"}var ee=new Map,Be=De.features??{};for(let[e,t]of Object.entries(Be))ee.set(e,{id:e,name:t.name??e,status:{baseline:t.status?.baseline??null},compat_features:t.compat_features??[]});function te(){return L}function ne(e){let t=ee.get(e);return t?{level:Le(t.status?.baseline),featureName:t.name??e,compatKeys:t.compat_features??[]}:{level:"widely",featureName:e,compatKeys:[]}}function re(e){switch(e){case"limited":return"Provide fallback UI or feature detection for unsupported browsers.";case"newly":return"OK for modern targets; keep a fallback in place for older browsers.";default:return"No action required."}}function Le(e){return e===!1?"limited":e==="low"?"newly":"widely"}import j from"picocolors";function H(e,t){let n=`${e==="info"?j.blue("[base-lint]"):e==="warn"?j.yellow("[base-lint]"):j.red("[base-lint]")} ${t}`;e==="error"?console.error(n):e==="warn"?console.warn(n):console.log(n)}var c={info:e=>H("info",e),warn:e=>H("warn",e),error:e=>H("error",e)};async function ae(e){let{cwd:t,files:r,strict:n,suppress:i,treatNewlyAs:s,cliVersion:o}=e,l=te(),a=[];for(let m of r){let f=ie.resolve(t,m),y;try{y=await je.readFile(f,"utf8")}catch(g){c.warn(`Unable to read ${m}: ${g.message}`);continue}let d=ie.extname(m).toLowerCase();if([".js",".jsx",".ts",".tsx",".mjs",".cjs"].includes(d)){let g=He(y,m,{strict:n});oe(a,g,i);continue}if(d===".css"||d===".scss"){let g=Ue(y,m);oe(a,g,i);continue}if(d===".html"||d===".htm"){let g=await qe(y,m,n,i);a.push(...g);continue}}return a.sort((m,f)=>m.file.localeCompare(f.file)||(m.line??0)-(f.line??0)),{summary:Je(a),findings:a,meta:{cliVersion:o,datasetVersion:l,strict:n,treatNewlyAs:s,generatedAt:new Date().toISOString()}}}function He(e,t,r){let n=C(e,t);return n?O(n,{strict:r.strict}).map(s=>R(t,s)):(c.warn(`Unable to parse JavaScript in ${t}`),[])}function Ue(e,t){let r=P(e,t);return r?D(r).map(i=>R(t,i)):(c.warn(`Unable to parse CSS in ${t}`),[])}async function qe(e,t,r,n){let i=X(e),s=[];for(let o of i)if(o.type==="script"){let l=C(o.content,`${t}#inline-script`);if(!l){c.warn(`Unable to parse inline script in ${t}`);continue}let a=O(l,{strict:r});for(let u of a){let p=se(u,o.line),m=R(t,p);n.includes(m.featureId)||s.push(m)}}else if(o.type==="style"){let l=P(o.content,`${t}#inline-style`);if(!l){c.warn(`Unable to parse inline style in ${t}`);continue}let a=D(l);for(let u of a){let p=se(u,o.line),m=R(t,p);n.includes(m.featureId)||s.push(m)}}return s}function se(e,t){return{...e,line:e.line!=null?e.line+t-1:t}}function oe(e,t,r){for(let n of t)r.includes(n.featureId)||e.push(n)}function R(e,t){let r=ne(t.featureId),n=re(r.level);return{file:e,line:t.line??null,column:t.column??null,featureId:t.featureId,featureName:r.featureName||t.featureName,baseline:r.level,guidance:n,ruleId:`baseline/${r.level}`}}function Je(e){let t={total:e.length,limited:0,newly:0,widely:0};for(let r of e)r.baseline==="limited"?t.limited+=1:r.baseline==="newly"?t.newly+=1:t.widely+=1;return t}function ce(e){return JSON.stringify(e,null,2)}function ue(e){let t=[];t.push("<!-- base-lint-sticky -->"),t.push("## Base Lint Report"),t.push("");let r=`**Status:** ${Me(e.summary)}`;if(t.push(r),t.push(""),t.push("| File | Line | Feature | Baseline | Guidance |"),t.push("|------|------|---------|----------|----------|"),e.findings.length===0)t.push("| (none) | - | - | - | Baseline clear |");else for(let n of e.findings){let i=n.line!=null?String(n.line):"-",s=le(n.featureName),o=le(n.guidance);t.push(`| ${n.file} | ${i} | ${s} | ${We(n.baseline)} | ${o} |`)}return t.push(""),t.push(`Policy: Limited = error (max 0), Newly = ${Ge(e.meta.treatNewlyAs)}`),t.push(`Dataset: web-features ${e.meta.datasetVersion}`),t.join(`
`)}function Me(e){return[`\u274C Limited: ${e.limited}`,`\u26A0\uFE0F Newly: ${e.newly}`,`\u2705 Widely: ${e.widely}`].join(" \xB7 ")}function Ge(e){switch(e){case"error":return"error";case"ignore":return"ignored";default:return"warn (non-blocking)"}}function le(e){return e.replace(/\|/g,"\\|")}function We(e){return e.charAt(0).toUpperCase()+e.slice(1)}import{promises as k}from"fs";import ze from"path";async function U(e){await k.mkdir(e,{recursive:!0})}async function I(e,t){await U(ze.dirname(e)),await k.writeFile(e,t,"utf8")}async function me(e,t){await I(e,JSON.stringify(t,null,2))}async function E(e){let t=await k.readFile(e,"utf8");return JSON.parse(t)}async function $(e){try{return await k.readFile(e,"utf8")}catch(t){if(t.code==="ENOENT")return null;throw t}}import q from"path";import{promises as Ve}from"fs";var Ke={mode:"diff",treatNewlyAs:"warn",maxLimited:0,strict:!1,targets:"all",suppress:[],include:[],ignore:[]},Ye=["node_modules/","dist/","build/","coverage/","*.min.js"];async function pe(e,t){let r=t.config?q.resolve(e,t.config):q.join(e,"base-lint.config.json"),n=await Xe(r);if(t.config&&!n)throw new Error(`Config file not found at ${r}`);let i={...Ke,...n??{}};if(t.mode){if(!["diff","repo"].includes(t.mode))throw new Error(`Unsupported mode: ${t.mode}`);i.mode=t.mode}if(typeof t.strict=="boolean"&&(i.strict=t.strict),t.treatNewly){if(!["warn","error","ignore"].includes(t.treatNewly))throw new Error(`Unsupported treat-newly option: ${t.treatNewly}`);i.treatNewlyAs=t.treatNewly}i.maxLimited=Number(n?.maxLimited??i.maxLimited),Number.isNaN(i.maxLimited)&&(i.maxLimited=0);let s=Array.isArray(i.suppress)?i.suppress:[],o=Array.isArray(n?.ignore)?n.ignore??[]:[],l=Array.isArray(n?.include)?n.include??[]:[],a=await Qe(e),u=[...Ye,...o,...a],p=Array.from(new Set(u.filter(Boolean))),m=l;return{config:{...i,suppress:s,ignore:p,include:m},ignorePatterns:p,includePatterns:m,configPath:n?r:void 0}}async function Xe(e){try{let t=await Ve.readFile(e,"utf8");return JSON.parse(t)}catch(t){if(t.code==="ENOENT")return null;throw t}}async function Qe(e){let t=await $(q.join(e,".base-lintignore"));return t?t.split(/\r?\n/).map(r=>r.trim()).filter(r=>r.length>0&&!r.startsWith("#")):[]}import{promisify as Ze}from"util";import{exec as et}from"child_process";import tt from"path";var nt=Ze(et);async function fe(e){let t=(await N(["rev-parse","HEAD"],e)).trim(),r=process.env.GITHUB_BASE_REF,n=process.env.GITHUB_SHA,i=await it(),s=null;if(i&&n)s=`${i}...${n}`;else if(r)s=`origin/${r}...${t}`;else{let a=await rt(e).catch(()=>null);a&&(s=`${a}...${t}`)}let o;s?o=["diff","--name-only","--diff-filter=ACMRTUB",s]:o=["diff","--name-only","--diff-filter=ACMRTUB","HEAD"];let l;try{l=await N(o,e)}catch{l=await N(["diff","--name-only","--diff-filter=ACMRTUB","HEAD"],e)}return l.split(/\r?\n/).map(a=>a.trim()).filter(Boolean)}async function N(e,t){let r=`git ${e.join(" ")}`,{stdout:n}=await nt(r,{cwd:t});return n}async function rt(e){try{let n=(await N(["merge-base","HEAD","origin/HEAD"],e)).trim();if(n)return n}catch{}let t=["main","master"];for(let n of t)try{let i=(await N(["merge-base","HEAD",n],e)).trim();if(i)return i}catch{}return(await N(["rev-parse","HEAD^"],e)).trim()}async function it(){let e=process.env.GITHUB_EVENT_PATH;if(!e)return null;try{let t=await $(tt.resolve(e));if(!t)return null;let r=JSON.parse(t),n=r?.pull_request?.base?.sha??r?.merge_group?.base_sha;return typeof n=="string"?n:null}catch{return null}}function de(e,t=5){let n=e.split(`
`).filter((s,o)=>!(o===0&&s.startsWith("<!--"))),i=[];for(let s=0;s<n.length;s+=1){let o=n[s];if(o.startsWith("|------")){i.push(o);let l=[],a=s+1;for(;a<n.length;){let p=n[a];if(!p.startsWith("|"))break;l.push(p),a+=1}let u=l.slice(0,t);if(i.push(...u),l.length>t){let p=l.length-t;i.push(`| \u2026 | \u2026 | \u2026 | \u2026 | \u2026 (${p} more) |`)}s=a-1;continue}o.startsWith("<!--")||i.push(o)}return i.join(`
`).trimEnd()}var ge={name:"base-lint",version:"1.0.5",description:"Lint your repo against Web Baseline policies",license:"MIT",bugs:{url:"https://github.com/ej-sanmartin/base-lint/issues"},homepage:"https://github.com/web-baseline/base-lint#readme",repository:{type:"git",url:"https://github.com/ej-sanmartin/base-lint",directory:"packages/cli"},funding:{type:"individual",url:"https://Ko-fi.com/esanmartin"},type:"module",bin:{"base-lint":"dist/index.js"},files:["dist"],imports:{vitest:"../../tests/mocks/vitest.js"},scripts:{build:"tsup --config tsup.config.ts",dev:"tsx src/index.ts --help",prepublishOnly:"npm run build"},dependencies:{"@typescript-eslint/typescript-estree":"^6.21.0",commander:"^11.1.0",globby:"^13.2.2",ignore:"^5.3.1",minimatch:"^9.0.3","node-html-parser":"^6.1.11",picocolors:"^1.0.0",postcss:"^8.4.35","web-features":"^2.0.0"},devDependencies:{"@types/node":"^20.11.30",tsup:"^8.0.1",tsx:"^4.7.1",typescript:"^5.4.2"},keywords:["lint","baseline","eslint","stylelint","typescript","javascript","css","cli","ci","bot","static-analysis","code-quality","code-style","automation","best-practices"]};var h=".base-lint-report";var lt=[".js",".jsx",".ts",".tsx",".mjs",".cjs",".css",".scss",".html",".htm"];async function ye(e){let t=process.cwd(),r=T.resolve(t,e.out??h),n=await pe(t,e),i=n.config,s=await ut(t,i.mode,n.includePatterns,n.ignorePatterns);s.length===0?c.warn("No files matched the scan configuration."):c.info(`Scanning ${s.length} file(s) in ${i.mode} mode.`);let o=await ae({cwd:t,files:s,strict:i.strict,suppress:i.suppress??[],treatNewlyAs:i.treatNewlyAs,cliVersion:ge.version??"0.0.0"});await U(r);let l=ue(o);await I(T.join(r,"report.json"),ce(o)),await I(T.join(r,"report.md"),l),await me(T.join(r,"meta.json"),{cliVersion:o.meta.cliVersion,datasetVersion:o.meta.datasetVersion,generatedAt:o.meta.generatedAt,config:{path:n.configPath??null,mode:i.mode,strict:i.strict,treatNewlyAs:i.treatNewlyAs,maxLimited:i.maxLimited,suppress:i.suppress,include:i.include,ignore:i.ignore},filesAnalyzed:s});let a=e.printFullReport?l:de(l);a.trim().length>0&&console.log(a),c.info(`Report written to ${r}`)}async function ut(e,t,r,n){let i=mt(n),s=ct();s.add(i);let o=r.map(u=>at.filter(u,{dot:!0,matchBase:!0})),l=u=>!(!lt.includes(T.extname(u).toLowerCase())||s.ignores(u)||o.length>0&&!o.some(p=>p(u)));if(t==="repo"){let u=r.length>0?r:["**/*"],p=await ot(u,{cwd:e,gitignore:!0,dot:!0,ignore:i,onlyFiles:!0});return Array.from(new Set(p.filter(m=>l(m))))}let a=await fe(e);return Array.from(new Set(a.filter(u=>l(u))))}function mt(e){let t=[];for(let r of e)t.push(r),r.endsWith("/")&&t.push(`${r}**`);return t}import pt from"path";async function we(e){let t=process.cwd(),r=pt.resolve(t,e.input),n=await E(r),i=Number(e.maxLimited??0),s=n.summary.limited,o=n.summary.newly,l=e.failOnWarn??n.meta.treatNewlyAs==="error";if(c.info(`Report summary \u2013 Limited: ${s}, Newly: ${o}, Widely: ${n.summary.widely}`),Number.isNaN(i))throw new Error("Invalid max-limited value.");if(s>i){c.error(`Limited findings (${s}) exceed the allowed maximum (${i}).`),process.exitCode=1;return}if(l&&o>0){c.error(`Newly findings (${o}) present and fail-on-warn is enabled.`),process.exitCode=1;return}c.info("Baseline policy satisfied.")}import{promises as he}from"fs";import ft from"path";async function be(e){let t=process.cwd(),r=e.stickyMarker??"<!-- base-lint-sticky -->",n=ft.resolve(t,e.input),i=await he.readFile(n,"utf8"),s=process.env.GITHUB_TOKEN||process.env.GH_TOKEN,o=process.env.GITHUB_REPOSITORY,l=process.env.GITHUB_EVENT_NAME;if(!s||!o||!l){c.info("GitHub context not detected. Skipping sticky comment.");return}if(!l.startsWith("pull_request")){c.info(`Event ${l} is not a pull request. Skipping comment.`);return}let a=await dt();if(!a){c.info("No pull request number found in event payload. Skipping comment.");return}if(a.isFork){c.info("Pull request originates from a fork. Skipping sticky comment to avoid permission issues.");return}let[u,p]=o.split("/"),f=(await gt(u,p,a.number,s)).find(d=>d.body?.includes(r));if(f){await wt(u,p,f.id,i,s)&&c.info(`Updated existing sticky comment #${f.id}.`);return}await yt(u,p,a.number,i,s)&&c.info(`Created sticky comment on PR #${a.number}.`)}async function dt(){let e=process.env.GITHUB_EVENT_PATH;if(!e)return null;try{let t=await he.readFile(e,"utf8"),r=JSON.parse(t),n=r?.pull_request?.number??r?.number;if(typeof n!="number")return null;let i=r?.pull_request?.base?.repo?.full_name,s=r?.pull_request?.head?.repo?.full_name;return{number:n,isFork:!!(s&&i&&s!==i)}}catch(t){return c.warn(`Failed to parse GitHub event payload: ${t.message}`),null}}async function gt(e,t,r,n){let i=`https://api.github.com/repos/${e}/${t}/issues/${r}/comments?per_page=100`,s=await J(i,n);if(!s.ok){if(s.status===403||s.status===404)return c.warn(`Insufficient permissions to list comments (status ${s.status}).`),[];throw new Error(`Failed to list comments: ${s.status}`)}return await s.json()}async function yt(e,t,r,n,i){let s=`https://api.github.com/repos/${e}/${t}/issues/${r}/comments`,o=await J(s,i,{method:"POST",body:JSON.stringify({body:n})});if(!o.ok){if(o.status===403||o.status===404)return c.warn(`Insufficient permissions to create comment (status ${o.status}).`),!1;throw new Error(`Failed to create comment: ${o.status}`)}return!0}async function wt(e,t,r,n,i){let s=`https://api.github.com/repos/${e}/${t}/issues/comments/${r}`,o=await J(s,i,{method:"PATCH",body:JSON.stringify({body:n})});if(!o.ok){if(o.status===403||o.status===404)return c.warn(`Insufficient permissions to update comment (status ${o.status}).`),!1;throw new Error(`Failed to update comment: ${o.status}`)}return!0}async function J(e,t,r={}){let n=new Headers(r.headers??{});return n.set("Authorization",`Bearer ${t}`),n.set("Accept","application/vnd.github+json"),n.set("User-Agent","base-lint-cli"),fetch(e,{...r,headers:n})}import ht from"path";async function Ne(e){let t=process.cwd(),r=ht.resolve(t,e.input),n=await E(r),i=process.env.GITHUB_TOKEN||process.env.GH_TOKEN,s=process.env.GITHUB_REPOSITORY,o=process.env.GITHUB_EVENT_NAME??"",l=process.env.GITHUB_SHA;if(!i||!s||!l){c.info("GitHub context not detected. Skipping annotations.");return}if(o.startsWith("pull_request")&&(await xt())?.isFork){c.info("Pull request originates from a fork. Skipping annotations.");return}let a=bt(n.findings,n.meta.treatNewlyAs),u=Math.max(1,Number(e.batchSize??"50")),p=`Limited: ${n.summary.limited} \xB7 Newly: ${n.summary.newly} \xB7 Widely: ${n.summary.widely}`,m=Nt(n),[f,y]=s.split("/"),d="Base Lint",g=new Date().toISOString(),M={title:d,summary:p,text:"Generated by base-lint."},Ee=a.slice(0,u),S=await Se(`https://api.github.com/repos/${f}/${y}/check-runs`,i,{method:"POST",body:JSON.stringify({name:d,head_sha:l,status:"completed",conclusion:m,completed_at:g,output:{...M,annotations:Ee}})});if(!S.ok){if(S.status===403||S.status===404){c.warn(`Insufficient permissions to create check run (status ${S.status}).`);return}throw new Error(`Failed to create check run: ${S.status}`)}let G=(await S.json()).id;if(!G){c.warn("Check run created without id. Skipping additional annotations.");return}let F=a.slice(u);if(F.length===0)return;let W=[];for(let w=0;w<F.length;w+=u)W.push(F.slice(w,w+u));for(let w of W){let z=await Se(`https://api.github.com/repos/${f}/${y}/check-runs/${G}`,i,{method:"PATCH",body:JSON.stringify({status:"completed",conclusion:m,completed_at:new Date().toISOString(),output:{...M,annotations:w}})});if(!z.ok){c.warn(`Failed to append annotations (status ${z.status}).`);break}}}function bt(e,t){let r=[];for(let n of e){if(n.baseline==="widely")continue;let i=St(n.baseline,t),s=n.line??1,o=n.column??void 0;r.push({path:n.file,start_line:s,end_line:s,start_column:o,end_column:o,annotation_level:i,title:n.featureName,message:`${n.featureName} is ${n.baseline}. ${n.guidance}`})}return r}function St(e,t){return e==="limited"||t==="error"?"failure":t==="ignore"?"notice":"warning"}function Nt(e){return e.summary.limited>0||e.meta.treatNewlyAs==="error"&&e.summary.newly>0?"failure":e.summary.newly>0?"neutral":"success"}async function xt(){let e=process.env.GITHUB_EVENT_PATH;if(!e)return null;try{let t=await E(e),r=t?.pull_request?.base?.repo?.full_name,n=t?.pull_request?.head?.repo?.full_name;return{isFork:!!(n&&r&&n!==r)}}catch(t){return c.warn(`Failed to read event payload: ${t.message}`),null}}async function Se(e,t,r={}){let n=new Headers(r.headers??{});return n.set("Authorization",`Bearer ${t}`),n.set("Accept","application/vnd.github+json"),n.set("User-Agent","base-lint-cli"),fetch(e,{...r,headers:n})}import vt from"path";import{promises as Et}from"fs";async function xe(e={}){let t=process.cwd(),r=vt.resolve(t,e.out??h);try{await Et.rm(r,{recursive:!0,force:!0}),c.info(`Removed report directory at ${r}`)}catch(n){let i=n instanceof Error?n.message:String(n);throw c.error(`Failed to remove report directory at ${r}: ${i}`),n}}var ve={name:"base-lint",version:"1.0.5",description:"Lint your repo against Web Baseline policies",license:"MIT",bugs:{url:"https://github.com/ej-sanmartin/base-lint/issues"},homepage:"https://github.com/web-baseline/base-lint#readme",repository:{type:"git",url:"https://github.com/ej-sanmartin/base-lint",directory:"packages/cli"},funding:{type:"individual",url:"https://Ko-fi.com/esanmartin"},type:"module",bin:{"base-lint":"dist/index.js"},files:["dist"],imports:{vitest:"../../tests/mocks/vitest.js"},scripts:{build:"tsup --config tsup.config.ts",dev:"tsx src/index.ts --help",prepublishOnly:"npm run build"},dependencies:{"@typescript-eslint/typescript-estree":"^6.21.0",commander:"^11.1.0",globby:"^13.2.2",ignore:"^5.3.1",minimatch:"^9.0.3","node-html-parser":"^6.1.11",picocolors:"^1.0.0",postcss:"^8.4.35","web-features":"^2.0.0"},devDependencies:{"@types/node":"^20.11.30",tsup:"^8.0.1",tsx:"^4.7.1",typescript:"^5.4.2"},keywords:["lint","baseline","eslint","stylelint","typescript","javascript","css","cli","ci","bot","static-analysis","code-quality","code-style","automation","best-practices"]};var b=new At;b.name("base-lint").description("Baseline-aware linting for modern web platform features").version(ve.version??"0.0.0");b.command("scan").description("Scan files for Baseline coverage issues").option("--mode <mode>","analysis mode: diff or repo","diff").option("--out <dir>","output directory for reports",h).option("--strict","enable strict feature detection").option("--treat-newly <behavior>","treat Newly features as warn|error|ignore","warn").option("--config <path>","path to config file override").option("--print-full-report","print the full Markdown report to stdout").action(async e=>{try{await ye(e)}catch(t){x(t)}});b.command("enforce").description("Enforce policy against a previously generated JSON report").requiredOption("--input <file>","path to JSON report").option("--max-limited <count>","maximum number of limited findings","0").option("--fail-on-warn","treat Newly findings as failures").action(async e=>{try{await we(e)}catch(t){x(t)}});b.command("comment").description("Create or update a sticky pull request summary comment on GitHub").requiredOption("--input <file>","Markdown report to post").option("--sticky-marker <marker>","HTML comment marker for sticky comment","<!-- base-lint-sticky -->").action(async e=>{try{await be(e)}catch(t){x(t)}});b.command("annotate").description("Publish GitHub Checks annotations for findings").requiredOption("--input <file>","JSON report to annotate from").option("--batch-size <n>","number of annotations per API request","50").action(async e=>{try{await Ne(e)}catch(t){x(t)}});b.command("clean").description("Remove generated Baseline report artifacts").option("--out <dir>","report directory to delete",h).action(async e=>{try{await xe(e)}catch(t){x(t)}});b.parseAsync().catch(e=>{x(e)});function x(e){let t=e instanceof Error?e.message:String(e);console.error(t),process.exitCode=1}
