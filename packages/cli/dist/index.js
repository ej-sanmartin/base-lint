#!/usr/bin/env node
import{Command as St}from"commander";import x from"path";import{globby as rt}from"globby";import{minimatch as it}from"minimatch";import st from"ignore";import{promises as je}from"fs";import re from"path";import{parse as xe}from"@typescript-eslint/typescript-estree";var ve=xe;function R(e,t){try{return ve(e,{loc:!0,range:!0,jsx:t.endsWith("x"),comment:!1,errorOnUnknownASTType:!1,useJSXTextNode:!0,warnOnUnsupportedTypeScriptVersion:!1,loggerFn:()=>{}})}catch{return null}}function A(e,t,r=null){t(e,r);for(let n of Object.keys(e)){let i=e[n];if(i)if(Array.isArray(i))for(let s of i)s&&typeof s=="object"&&"type"in s&&A(s,t,e);else typeof i=="object"&&"type"in i&&A(i,t,e)}}import Ae from"postcss";function F(e,t){try{return Ae.parse(e,{from:t})}catch{return null}}function z(e,t){e.walk(r=>{(r.type==="rule"||r.type==="atrule")&&t(r)})}import{parse as Ee,HTMLElement as Te}from"node-html-parser";function K(e){let t=Ee(e,{script:!0,style:!0,comment:!1}),r=[],n=t.querySelectorAll("script, style");for(let i of n)if(i instanceof Te){if(i.tagName==="SCRIPT"){if(i.getAttribute("src"))continue;let o=i.innerHTML;r.push({type:"script",content:o,line:V(e,W(i))})}else if(i.tagName==="STYLE"){let s=i.innerHTML;r.push({type:"style",content:s,line:V(e,W(i))})}}return r}function V(e,t){return t<=0?1:e.slice(0,t).split(/\r?\n/).length}function W(e){if(Array.isArray(e.range)&&e.range.length>0)return e.range[0];let t=e.toString(),r=e.root;return r?r.toString().indexOf(t):0}function C(e,t){let r=[];return A(e,(n,i)=>{if(n.type==="MemberExpression"){let s=ke(n,t);s&&r.push(s)}else if(n.type==="NewExpression"){let s=Ie(n);s&&r.push(s)}else if(n.type==="Identifier"){let s=$e(n,i);s&&r.push(s)}}),r}function _(e){let t=[];return z(e,r=>{if(r.type==="rule"){let n=r.selector??"";n.includes(":has(")&&t.push(P("css.has-selector",":has() selector",r)),n.includes(":where(")&&t.push(P("css.where-selector",":where() selector",r))}r.type==="atrule"&&r.name==="container"&&t.push(P("css.container-queries","@container queries",r))}),t}function ke(e,t){if(!t.strict&&e.computed)return null;let r=Y(e.object),n=e.property&&e.property.type==="Identifier"?e.property.name:null;return!r||!n?null:{"navigator.share":{featureId:"web.share",featureName:"Web Share API",line:e.property.loc?.start.line??e.loc?.start.line??null,column:(e.property.loc?.start.column??e.loc?.start.column??0)+1},"navigator.usb":{featureId:"web.usb",featureName:"WebUSB API",line:e.property.loc?.start.line??e.loc?.start.line??null,column:(e.property.loc?.start.column??e.loc?.start.column??0)+1},"Notification.requestPermission":{featureId:"web.notifications",featureName:"Notifications API",line:e.property.loc?.start.line??e.loc?.start.line??null,column:(e.property.loc?.start.column??e.loc?.start.column??0)+1}}[`${r}.${n}`]??null}function Ie(e){if(e.callee.type==="Identifier"){let t=e.callee.name;if(t==="Notification")return{featureId:"web.notifications",featureName:"Notifications API",line:e.callee.loc?.start.line??e.loc?.start.line??null,column:(e.callee.loc?.start.column??e.loc?.start.column??0)+1};if(t==="BroadcastChannel")return{featureId:"web.broadcast-channel",featureName:"BroadcastChannel API",line:e.callee.loc?.start.line??e.loc?.start.line??null,column:(e.callee.loc?.start.column??e.loc?.start.column??0)+1};if(t==="IdleDetector")return{featureId:"web.idle-detection",featureName:"Idle Detection API",line:e.callee.loc?.start.line??e.loc?.start.line??null,column:(e.callee.loc?.start.column??e.loc?.start.column??0)+1}}return null}function $e(e,t){return e.name==="IdleDetector"?t&&t.type==="NewExpression"&&t.callee===e?null:{featureId:"web.idle-detection",featureName:"Idle Detection API",line:e.loc?.start.line??null,column:(e.loc?.start.column??0)+1}:null}function P(e,t,r){let n=r.source?.start;return{featureId:e,featureName:t,line:n?.line??null,column:n?n.column+1:null}}function Y(e){if(e.type==="Identifier")return e.name;if(e.type==="MemberExpression"&&e.property.type==="Identifier"&&!e.computed){let t=Y(e.object);if(t)return`${t}.${e.property.name}`}return null}import{readFileSync as Re}from"fs";import{createRequire as Fe}from"module";import B from"path";import{pathToFileURL as X}from"url";var Pe=typeof import.meta<"u"&&import.meta.url?import.meta.url:typeof __filename<"u"?X(__filename).href:X(B.join(process.cwd(),"index.js")).href,Q=Fe(Pe),Ce=Q("web-features/data.json"),j="unknown";try{let e=Q.resolve("web-features"),t=B.join(B.dirname(e),"package.json"),r=Re(t,"utf-8"),n=JSON.parse(r);typeof n.version=="string"&&(j=n.version)}catch{j="unknown"}var Z=new Map,_e=Ce.features??{};for(let[e,t]of Object.entries(_e))Z.set(e,{id:e,name:t.name??e,status:{baseline:t.status?.baseline??null},compat_features:t.compat_features??[]});function ee(){return j}function te(e){let t=Z.get(e);return t?{level:Be(t.status?.baseline),featureName:t.name??e,compatKeys:t.compat_features??[]}:{level:"widely",featureName:e,compatKeys:[]}}function ne(e){switch(e){case"limited":return"Provide fallback UI or feature detection for unsupported browsers.";case"newly":return"OK for modern targets; keep a fallback in place for older browsers.";default:return"No action required."}}function Be(e){return e===!1?"limited":e==="low"?"newly":"widely"}import O from"picocolors";function L(e,t){let n=`${e==="info"?O.blue("[base-lint]"):e==="warn"?O.yellow("[base-lint]"):O.red("[base-lint]")} ${t}`;e==="error"?console.error(n):e==="warn"?console.warn(n):console.log(n)}var a={info:e=>L("info",e),warn:e=>L("warn",e),error:e=>L("error",e)};async function oe(e){let{cwd:t,files:r,strict:n,suppress:i,treatNewlyAs:s,cliVersion:o}=e,l=ee(),c=[];for(let m of r){let f=re.resolve(t,m),y;try{y=await je.readFile(f,"utf8")}catch(g){a.warn(`Unable to read ${m}: ${g.message}`);continue}let d=re.extname(m).toLowerCase();if([".js",".jsx",".ts",".tsx",".mjs",".cjs"].includes(d)){let g=Oe(y,m,{strict:n});se(c,g,i);continue}if(d===".css"||d===".scss"){let g=Le(y,m);se(c,g,i);continue}if(d===".html"||d===".htm"){let g=await De(y,m,n,i);c.push(...g);continue}}return c.sort((m,f)=>m.file.localeCompare(f.file)||(m.line??0)-(f.line??0)),{summary:He(c),findings:c,meta:{cliVersion:o,datasetVersion:l,strict:n,treatNewlyAs:s,generatedAt:new Date().toISOString()}}}function Oe(e,t,r){let n=R(e,t);return n?C(n,{strict:r.strict}).map(s=>E(t,s)):(a.warn(`Unable to parse JavaScript in ${t}`),[])}function Le(e,t){let r=F(e,t);return r?_(r).map(i=>E(t,i)):(a.warn(`Unable to parse CSS in ${t}`),[])}async function De(e,t,r,n){let i=K(e),s=[];for(let o of i)if(o.type==="script"){let l=R(o.content,`${t}#inline-script`);if(!l){a.warn(`Unable to parse inline script in ${t}`);continue}let c=C(l,{strict:r});for(let u of c){let p=ie(u,o.line),m=E(t,p);n.includes(m.featureId)||s.push(m)}}else if(o.type==="style"){let l=F(o.content,`${t}#inline-style`);if(!l){a.warn(`Unable to parse inline style in ${t}`);continue}let c=_(l);for(let u of c){let p=ie(u,o.line),m=E(t,p);n.includes(m.featureId)||s.push(m)}}return s}function ie(e,t){return{...e,line:e.line!=null?e.line+t-1:t}}function se(e,t,r){for(let n of t)r.includes(n.featureId)||e.push(n)}function E(e,t){let r=te(t.featureId),n=ne(r.level);return{file:e,line:t.line??null,column:t.column??null,featureId:t.featureId,featureName:r.featureName||t.featureName,baseline:r.level,guidance:n,ruleId:`baseline/${r.level}`}}function He(e){let t={total:e.length,limited:0,newly:0,widely:0};for(let r of e)r.baseline==="limited"?t.limited+=1:r.baseline==="newly"?t.newly+=1:t.widely+=1;return t}function ae(e){return JSON.stringify(e,null,2)}function le(e){let t=[];t.push("<!-- base-lint-sticky -->"),t.push("## Base Lint Report"),t.push("");let r=`**Status:** ${qe(e.summary)}`;if(t.push(r),t.push(""),t.push("| File | Line | Feature | Baseline | Guidance |"),t.push("|------|------|---------|----------|----------|"),e.findings.length===0)t.push("| (none) | - | - | - | Baseline clear |");else for(let n of e.findings){let i=n.line!=null?String(n.line):"-",s=ce(n.featureName),o=ce(n.guidance);t.push(`| ${n.file} | ${i} | ${s} | ${Je(n.baseline)} | ${o} |`)}return t.push(""),t.push(`Policy: Limited = error (max 0), Newly = ${Ue(e.meta.treatNewlyAs)}`),t.push(`Dataset: web-features ${e.meta.datasetVersion}`),t.join(`
`)}function qe(e){return[`\u274C Limited: ${e.limited}`,`\u26A0\uFE0F Newly: ${e.newly}`,`\u2705 Widely: ${e.widely}`].join(" \xB7 ")}function Ue(e){switch(e){case"error":return"error";case"ignore":return"ignored";default:return"warn (non-blocking)"}}function ce(e){return e.replace(/\|/g,"\\|")}function Je(e){return e.charAt(0).toUpperCase()+e.slice(1)}import{promises as T}from"fs";import Me from"path";async function D(e){await T.mkdir(e,{recursive:!0})}async function k(e,t){await D(Me.dirname(e)),await T.writeFile(e,t,"utf8")}async function ue(e,t){await k(e,JSON.stringify(t,null,2))}async function S(e){let t=await T.readFile(e,"utf8");return JSON.parse(t)}async function I(e){try{return await T.readFile(e,"utf8")}catch(t){if(t.code==="ENOENT")return null;throw t}}import H from"path";import{promises as Ge}from"fs";var ze={mode:"diff",treatNewlyAs:"warn",maxLimited:0,strict:!1,targets:"all",suppress:[],include:[],ignore:[]},Ve=["node_modules/","dist/","build/","coverage/","*.min.js"];async function me(e,t){let r=t.config?H.resolve(e,t.config):H.join(e,"base-lint.config.json"),n=await We(r);if(t.config&&!n)throw new Error(`Config file not found at ${r}`);let i={...ze,...n??{}};if(t.mode){if(!["diff","repo"].includes(t.mode))throw new Error(`Unsupported mode: ${t.mode}`);i.mode=t.mode}if(typeof t.strict=="boolean"&&(i.strict=t.strict),t.treatNewly){if(!["warn","error","ignore"].includes(t.treatNewly))throw new Error(`Unsupported treat-newly option: ${t.treatNewly}`);i.treatNewlyAs=t.treatNewly}i.maxLimited=Number(n?.maxLimited??i.maxLimited),Number.isNaN(i.maxLimited)&&(i.maxLimited=0);let s=Array.isArray(i.suppress)?i.suppress:[],o=Array.isArray(n?.ignore)?n.ignore??[]:[],l=Array.isArray(n?.include)?n.include??[]:[],c=await Ke(e),u=[...Ve,...o,...c],p=Array.from(new Set(u.filter(Boolean))),m=l;return{config:{...i,suppress:s,ignore:p,include:m},ignorePatterns:p,includePatterns:m,configPath:n?r:void 0}}async function We(e){try{let t=await Ge.readFile(e,"utf8");return JSON.parse(t)}catch(t){if(t.code==="ENOENT")return null;throw t}}async function Ke(e){let t=await I(H.join(e,".base-lintignore"));return t?t.split(/\r?\n/).map(r=>r.trim()).filter(r=>r.length>0&&!r.startsWith("#")):[]}import{promisify as Ye}from"util";import{exec as Xe}from"child_process";import Qe from"path";var Ze=Ye(Xe);async function pe(e){let t=(await h(["rev-parse","HEAD"],e)).trim(),r=process.env.GITHUB_BASE_REF,n=process.env.GITHUB_SHA,i=await tt(),s=null;if(i&&n)s=`${i}...${n}`;else if(r)s=`origin/${r}...${t}`;else{let c=await et(e).catch(()=>null);c&&(s=`${c}...${t}`)}let o;s?o=["diff","--name-only","--diff-filter=ACMRTUB",s]:o=["diff","--name-only","--diff-filter=ACMRTUB","HEAD"];let l;try{l=await h(o,e)}catch{l=await h(["diff","--name-only","--diff-filter=ACMRTUB","HEAD"],e)}return l.split(/\r?\n/).map(c=>c.trim()).filter(Boolean)}async function h(e,t){let r=`git ${e.join(" ")}`,{stdout:n}=await Ze(r,{cwd:t});return n}async function et(e){try{let n=(await h(["merge-base","HEAD","origin/HEAD"],e)).trim();if(n)return n}catch{}let t=["main","master"];for(let n of t)try{let i=(await h(["merge-base","HEAD",n],e)).trim();if(i)return i}catch{}return(await h(["rev-parse","HEAD^"],e)).trim()}async function tt(){let e=process.env.GITHUB_EVENT_PATH;if(!e)return null;try{let t=await I(Qe.resolve(e));if(!t)return null;let r=JSON.parse(t),n=r?.pull_request?.base?.sha??r?.merge_group?.base_sha;return typeof n=="string"?n:null}catch{return null}}var fe={name:"base-lint",version:"1.0.4",description:"Lint your repo against Web Baseline policies",license:"MIT",bugs:{url:"https://github.com/ej-sanmartin/base-lint/issues"},homepage:"https://github.com/web-baseline/base-lint#readme",repository:{type:"git",url:"https://github.com/ej-sanmartin/base-lint",directory:"packages/cli"},funding:{type:"individual",url:"https://Ko-fi.com/esanmartin"},type:"module",bin:{"base-lint":"dist/index.js"},files:["dist"],imports:{vitest:"../../tests/mocks/vitest.js"},scripts:{build:"tsup --config tsup.config.ts",dev:"tsx src/index.ts --help",prepublishOnly:"npm run build"},dependencies:{"@typescript-eslint/typescript-estree":"^6.21.0",commander:"^11.1.0",globby:"^13.2.2",ignore:"^5.3.1",minimatch:"^9.0.3","node-html-parser":"^6.1.11",picocolors:"^1.0.0",postcss:"^8.4.35","web-features":"^2.0.0"},devDependencies:{"@types/node":"^20.11.30",tsup:"^8.0.1",tsx:"^4.7.1",typescript:"^5.4.2"},keywords:["lint","baseline","eslint","stylelint","typescript","javascript","css","cli","ci","bot","static-analysis","code-quality","code-style","automation","best-practices"]};var ot=[".js",".jsx",".ts",".tsx",".mjs",".cjs",".css",".scss",".html",".htm"];async function de(e){let t=process.cwd(),r=x.resolve(t,e.out??".base-lint-report"),n=await me(t,e),i=n.config,s=await at(t,i.mode,n.includePatterns,n.ignorePatterns);s.length===0?a.warn("No files matched the scan configuration."):a.info(`Scanning ${s.length} file(s) in ${i.mode} mode.`);let o=await oe({cwd:t,files:s,strict:i.strict,suppress:i.suppress??[],treatNewlyAs:i.treatNewlyAs,cliVersion:fe.version??"0.0.0"});await D(r),await k(x.join(r,"report.json"),ae(o)),await k(x.join(r,"report.md"),le(o)),await ue(x.join(r,"meta.json"),{cliVersion:o.meta.cliVersion,datasetVersion:o.meta.datasetVersion,generatedAt:o.meta.generatedAt,config:{path:n.configPath??null,mode:i.mode,strict:i.strict,treatNewlyAs:i.treatNewlyAs,maxLimited:i.maxLimited,suppress:i.suppress,include:i.include,ignore:i.ignore},filesAnalyzed:s}),a.info(`Report written to ${r}`)}async function at(e,t,r,n){let i=ct(n),s=st();s.add(i);let o=r.map(u=>it.filter(u,{dot:!0,matchBase:!0})),l=u=>!(!ot.includes(x.extname(u).toLowerCase())||s.ignores(u)||o.length>0&&!o.some(p=>p(u)));if(t==="repo"){let u=r.length>0?r:["**/*"],p=await rt(u,{cwd:e,gitignore:!0,dot:!0,ignore:i,onlyFiles:!0});return Array.from(new Set(p.filter(m=>l(m))))}let c=await pe(e);return Array.from(new Set(c.filter(u=>l(u))))}function ct(e){let t=[];for(let r of e)t.push(r),r.endsWith("/")&&t.push(`${r}**`);return t}import lt from"path";async function ge(e){let t=process.cwd(),r=lt.resolve(t,e.input),n=await S(r),i=Number(e.maxLimited??0),s=n.summary.limited,o=n.summary.newly,l=e.failOnWarn??n.meta.treatNewlyAs==="error";if(a.info(`Report summary \u2013 Limited: ${s}, Newly: ${o}, Widely: ${n.summary.widely}`),Number.isNaN(i))throw new Error("Invalid max-limited value.");if(s>i){a.error(`Limited findings (${s}) exceed the allowed maximum (${i}).`),process.exitCode=1;return}if(l&&o>0){a.error(`Newly findings (${o}) present and fail-on-warn is enabled.`),process.exitCode=1;return}a.info("Baseline policy satisfied.")}import{promises as ye}from"fs";import ut from"path";async function we(e){let t=process.cwd(),r=e.stickyMarker??"<!-- base-lint-sticky -->",n=ut.resolve(t,e.input),i=await ye.readFile(n,"utf8"),s=process.env.GITHUB_TOKEN||process.env.GH_TOKEN,o=process.env.GITHUB_REPOSITORY,l=process.env.GITHUB_EVENT_NAME;if(!s||!o||!l){a.info("GitHub context not detected. Skipping sticky comment.");return}if(!l.startsWith("pull_request")){a.info(`Event ${l} is not a pull request. Skipping comment.`);return}let c=await mt();if(!c){a.info("No pull request number found in event payload. Skipping comment.");return}if(c.isFork){a.info("Pull request originates from a fork. Skipping sticky comment to avoid permission issues.");return}let[u,p]=o.split("/"),f=(await pt(u,p,c.number,s)).find(d=>d.body?.includes(r));if(f){await dt(u,p,f.id,i,s)&&a.info(`Updated existing sticky comment #${f.id}.`);return}await ft(u,p,c.number,i,s)&&a.info(`Created sticky comment on PR #${c.number}.`)}async function mt(){let e=process.env.GITHUB_EVENT_PATH;if(!e)return null;try{let t=await ye.readFile(e,"utf8"),r=JSON.parse(t),n=r?.pull_request?.number??r?.number;if(typeof n!="number")return null;let i=r?.pull_request?.base?.repo?.full_name,s=r?.pull_request?.head?.repo?.full_name;return{number:n,isFork:!!(s&&i&&s!==i)}}catch(t){return a.warn(`Failed to parse GitHub event payload: ${t.message}`),null}}async function pt(e,t,r,n){let i=`https://api.github.com/repos/${e}/${t}/issues/${r}/comments?per_page=100`,s=await q(i,n);if(!s.ok){if(s.status===403||s.status===404)return a.warn(`Insufficient permissions to list comments (status ${s.status}).`),[];throw new Error(`Failed to list comments: ${s.status}`)}return await s.json()}async function ft(e,t,r,n,i){let s=`https://api.github.com/repos/${e}/${t}/issues/${r}/comments`,o=await q(s,i,{method:"POST",body:JSON.stringify({body:n})});if(!o.ok){if(o.status===403||o.status===404)return a.warn(`Insufficient permissions to create comment (status ${o.status}).`),!1;throw new Error(`Failed to create comment: ${o.status}`)}return!0}async function dt(e,t,r,n,i){let s=`https://api.github.com/repos/${e}/${t}/issues/comments/${r}`,o=await q(s,i,{method:"PATCH",body:JSON.stringify({body:n})});if(!o.ok){if(o.status===403||o.status===404)return a.warn(`Insufficient permissions to update comment (status ${o.status}).`),!1;throw new Error(`Failed to update comment: ${o.status}`)}return!0}async function q(e,t,r={}){let n=new Headers(r.headers??{});return n.set("Authorization",`Bearer ${t}`),n.set("Accept","application/vnd.github+json"),n.set("User-Agent","base-lint-cli"),fetch(e,{...r,headers:n})}import gt from"path";async function he(e){let t=process.cwd(),r=gt.resolve(t,e.input),n=await S(r),i=process.env.GITHUB_TOKEN||process.env.GH_TOKEN,s=process.env.GITHUB_REPOSITORY,o=process.env.GITHUB_EVENT_NAME??"",l=process.env.GITHUB_SHA;if(!i||!s||!l){a.info("GitHub context not detected. Skipping annotations.");return}if(o.startsWith("pull_request")&&(await ht())?.isFork){a.info("Pull request originates from a fork. Skipping annotations.");return}let c=yt(n.findings,n.meta.treatNewlyAs),u=Math.max(1,Number(e.batchSize??"50")),p=`Limited: ${n.summary.limited} \xB7 Newly: ${n.summary.newly} \xB7 Widely: ${n.summary.widely}`,m=bt(n),[f,y]=s.split("/"),d="Base Lint",g=new Date().toISOString(),U={title:d,summary:p,text:"Generated by base-lint."},Se=c.slice(0,u),b=await be(`https://api.github.com/repos/${f}/${y}/check-runs`,i,{method:"POST",body:JSON.stringify({name:d,head_sha:l,status:"completed",conclusion:m,completed_at:g,output:{...U,annotations:Se}})});if(!b.ok){if(b.status===403||b.status===404){a.warn(`Insufficient permissions to create check run (status ${b.status}).`);return}throw new Error(`Failed to create check run: ${b.status}`)}let J=(await b.json()).id;if(!J){a.warn("Check run created without id. Skipping additional annotations.");return}let $=c.slice(u);if($.length===0)return;let M=[];for(let w=0;w<$.length;w+=u)M.push($.slice(w,w+u));for(let w of M){let G=await be(`https://api.github.com/repos/${f}/${y}/check-runs/${J}`,i,{method:"PATCH",body:JSON.stringify({status:"completed",conclusion:m,completed_at:new Date().toISOString(),output:{...U,annotations:w}})});if(!G.ok){a.warn(`Failed to append annotations (status ${G.status}).`);break}}}function yt(e,t){let r=[];for(let n of e){if(n.baseline==="widely")continue;let i=wt(n.baseline,t),s=n.line??1,o=n.column??void 0;r.push({path:n.file,start_line:s,end_line:s,start_column:o,end_column:o,annotation_level:i,title:n.featureName,message:`${n.featureName} is ${n.baseline}. ${n.guidance}`})}return r}function wt(e,t){return e==="limited"||t==="error"?"failure":t==="ignore"?"notice":"warning"}function bt(e){return e.summary.limited>0||e.meta.treatNewlyAs==="error"&&e.summary.newly>0?"failure":e.summary.newly>0?"neutral":"success"}async function ht(){let e=process.env.GITHUB_EVENT_PATH;if(!e)return null;try{let t=await S(e),r=t?.pull_request?.base?.repo?.full_name,n=t?.pull_request?.head?.repo?.full_name;return{isFork:!!(n&&r&&n!==r)}}catch(t){return a.warn(`Failed to read event payload: ${t.message}`),null}}async function be(e,t,r={}){let n=new Headers(r.headers??{});return n.set("Authorization",`Bearer ${t}`),n.set("Accept","application/vnd.github+json"),n.set("User-Agent","base-lint-cli"),fetch(e,{...r,headers:n})}var Ne={name:"base-lint",version:"1.0.4",description:"Lint your repo against Web Baseline policies",license:"MIT",bugs:{url:"https://github.com/ej-sanmartin/base-lint/issues"},homepage:"https://github.com/web-baseline/base-lint#readme",repository:{type:"git",url:"https://github.com/ej-sanmartin/base-lint",directory:"packages/cli"},funding:{type:"individual",url:"https://Ko-fi.com/esanmartin"},type:"module",bin:{"base-lint":"dist/index.js"},files:["dist"],imports:{vitest:"../../tests/mocks/vitest.js"},scripts:{build:"tsup --config tsup.config.ts",dev:"tsx src/index.ts --help",prepublishOnly:"npm run build"},dependencies:{"@typescript-eslint/typescript-estree":"^6.21.0",commander:"^11.1.0",globby:"^13.2.2",ignore:"^5.3.1",minimatch:"^9.0.3","node-html-parser":"^6.1.11",picocolors:"^1.0.0",postcss:"^8.4.35","web-features":"^2.0.0"},devDependencies:{"@types/node":"^20.11.30",tsup:"^8.0.1",tsx:"^4.7.1",typescript:"^5.4.2"},keywords:["lint","baseline","eslint","stylelint","typescript","javascript","css","cli","ci","bot","static-analysis","code-quality","code-style","automation","best-practices"]};var N=new St;N.name("base-lint").description("Baseline-aware linting for modern web platform features").version(Ne.version??"0.0.0");N.command("scan").description("Scan files for Baseline coverage issues").option("--mode <mode>","analysis mode: diff or repo","diff").option("--out <dir>","output directory for reports",".base-lint-report").option("--strict","enable strict feature detection").option("--treat-newly <behavior>","treat Newly features as warn|error|ignore","warn").option("--config <path>","path to config file override").action(async e=>{try{await de(e)}catch(t){v(t)}});N.command("enforce").description("Enforce policy against a previously generated JSON report").requiredOption("--input <file>","path to JSON report").option("--max-limited <count>","maximum number of limited findings","0").option("--fail-on-warn","treat Newly findings as failures").action(async e=>{try{await ge(e)}catch(t){v(t)}});N.command("comment").description("Create or update a sticky pull request summary comment on GitHub").requiredOption("--input <file>","Markdown report to post").option("--sticky-marker <marker>","HTML comment marker for sticky comment","<!-- base-lint-sticky -->").action(async e=>{try{await we(e)}catch(t){v(t)}});N.command("annotate").description("Publish GitHub Checks annotations for findings").requiredOption("--input <file>","JSON report to annotate from").option("--batch-size <n>","number of annotations per API request","50").action(async e=>{try{await he(e)}catch(t){v(t)}});N.parseAsync().catch(e=>{v(e)});function v(e){let t=e instanceof Error?e.message:String(e);console.error(t),process.exitCode=1}
